-- 1. Create the notifications table, if it doesn't exist
CREATE TABLE IF NOT EXISTS public.notifications (
  id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  user_id uuid NOT NULL REFERENCES auth.users(id) ON DELETE CASCADE,
  title text NOT NULL,
  message text NOT NULL,
  type text NOT NULL DEFAULT 'info'::text,
  is_read boolean NOT NULL DEFAULT false
);

-- 2. Enable Row Level Security (RLS) to protect data
ALTER TABLE public.notifications ENABLE ROW LEVEL SECURITY;

-- 3. Create a policy to allow users to read ONLY their own notifications
-- If a policy with this name already exists, it will be replaced
DROP POLICY IF EXISTS "Users can view their own notifications" ON public.notifications;
CREATE POLICY "Users can view their own notifications"
ON public.notifications
FOR SELECT
USING (auth.uid() = user_id);

-- 4. Allow insert operations for authenticated users
-- This is necessary for the function that sends notifications.
DROP POLICY IF EXISTS "Allow authenticated inserts" ON public.notifications;
CREATE POLICY "Allow authenticated inserts"
ON public.notifications
FOR INSERT
WITH CHECK (auth.role() = 'authenticated');
